import org.example.Problems.TwoArrays;
import org.junit.Assert;
import org.junit.Test;

import java.util.List;
import java.util.stream.Stream;

public class TwoArraysTest {
    @Test
    public void Test0 () {
        String s1 = "24 13 26 34 51 64 21 43 61 33 58 29 15 44 59 65 49 36 24 51 30 15 3 69 45 28 60 71 63 6 66 63 17 66 69 9 24 23 43 58 38 18 52 46 44 43 8 36 12 15 20 35 21 16 18 41 55 63 13 6 46 20 60 40 11 46 4 55 72 6 19 24 12 37 65 67 7 35 13 67 33 73 18 23 66 40 66 10 37 32 67 40 47 64 22 48 39 69 41 30 69 14 36 71 59 49 62 8 56 6 55 3 5 67 54 41 38 12 33 3 58 67 65 22 26 3 9 52 17 27 34 35 35 1 10 6 61 38 69 8 48 30 14 43 47 24 17 20 58 72 70 28 25 31 37 70 36 3 41 45 73 16 16 44 37 60 65 73 4 36 27 25 3 68 20 23 27 26 17 66 40 71 61 9 71 45 10 66 22 48 5 53 26 29 6 43 22 6 11 54 1 66 3 53 45 51 30 41 45 16 7 41 39 9 4 68 47 27 4 26 10 63 37 25 61 69 28 21 2 60 41 63 33 5 5 27 45 25 10 18 44 11 52 73 63 10 66 35 27 34 23 48 28 50 59 46 57 43 30 35 22 11 51 27 7 6 5 47 71 42 2 73 39 22 7 29 15 53 63 61 29 46 48 32 56 40 16 68 15 57 63 34 41 15 22 48 36 45 15 22 11 32 56 12 33 44 44 35 2 53 40 45 67 66 30 49 67 28 68 37 8 33 51 60 50 39 9 25 1 16 9 22 32 11 4 49 4 38 8 25 4 45 58 46 16 23 28 57 73 19 42 17 35 16 59 56 61 38 3 49 71 34 51 62 11 48 69 70 7 19 23 54 26 55 7 14 6 46 32 62 42 51 43 15 8 2 46 48 72 43 23 1 20 60 12 59 26 58 54 52 61 40 17 38 48 49 2 29 63 73 62 5 71 39 20 20 48 19 22 7 29 43 57 66 29 40 26 18 43 29 44 28 59 73 34 73 43 47 42 56";
        String s2 = "48 46 30 36 54 10 64 53 19 27 61 41 35 76 76 76 53 60 67 18 16 51 34 52 23 15 72 52 64 17 54 58 10 34 55 60 7 54 36 41 26 72 73 72 37 41 28 25 19 25 32 30 42 38 66 5 31 30 54 59 32 35 44 60 74 13 57 47 9 20 4 30 79 34 17 33 41 48 11 42 7 22 63 16 14 36 48 79 38 54 10 27 73 33 42 65 30 12 75 62 38 47 58 4 18 70 40 12 55 56 50 28 43 63 71 17 67 38 56 17 54 11 50 71 10 5 13 46 69 23 15 11 6 13 50 55 53 67 53 23 30 19 38 45 52 66 9 49 19 44 4 39 60 75 33 31 12 40 37 67 58 24 16 50 8 68 14 34 20 3 52 41 29 32 56 17 36 57 72 61 59 27 3 59 44 8 62 31 63 13 51 53 15 34 32 18 23 74 38 56 48 60 46 22 11 78 46 44 63 3 35 37 39 46 52 72 26 56 80 61 63 79 17 46 63 15 32 5 30 4 47 72 69 18 24 39 50 5 60 29 19 30 60 24 53 33 9 39 77 67 7 58 65 32 60 31 63 77 67 26 37 22 6 53 23 11 28 61 4 62 14 34 63 34 53 50 12 11 71 37 20 21 62 67 77 58 38 54 37 45 73 36 49 53 45 48 13 73 38 71 53 9 47 78 52 20 57 63 46 48 47 64 32 39 71 33 73 31 13 12 14 73 35 19 11 37 69 26 45 10 2 74 11 66 66 48 41 29 62 70 78 28 33 10 70 10 65 15 62 45 53 32 41 33 29 45 51 68 40 15 59 79 15 11 40 12 63 26 13 4 21 29 71 77 77 29 71 47 61 19 63 43 55 0 67 52 34 19 21 18 35 67 38 44 20 43 36 38 1 63 39 67 14 76 65 23 32 12 31 52 70 60 59 37 76 29 35 74 78 64 32 54 65 49 17 69 65 55 69 68 41 56 27 24 20 56 34 31 11 65";

        List<Integer> listOne = Stream.of(s1.split(" ")).map(Integer::parseInt).toList();
        List<Integer> listTwo = Stream.of(s2.split(" ")).map(Integer::parseInt).toList();
        int k = 73;

        String result = TwoArrays.twoArrays(k, listOne, listTwo);
        Assert.assertEquals("YES", result);
    }

    @Test
    public void Test1() {
        String s1 = "1 4 7 3 9 1 9 6 9 1 1 6 1 2 8 3 8 1 1 3 6 2 5 2 8 7 1 8 6 4 1 5 8 8 5 1 8 1 4 7 1 2 6 9 9 1 1 1 8 1 1 3 1 4 4 2 1 3 4 9 1 8 8 1 1 9 8 7 6 8 8 3 9 4 8 3 6 1 8 1 3 6 1 6 5 6 1 7 1 1 5 7 1 1 9 5 4 6 4 5 6 2 5 9 3 8 8 9 6 9 1 2 7 4 7 3 5 3 2 5 4 5 6 1 9 1 1 2 5 5 1 7 6 1 9 1 6 6 7 1 8 5 5 9 1 3 2 8 1 6 8 8 5 1 5 2 2 1 1 1 1 5 3 5 1 1 1 9 3 1 7 9 4 1 1 9 1 8 1 1 4 4 7 4 5 5 7 4 7 7 3 8 1 8 5 6 7 7 5 7 3 3 2 7 5 6 2 9 6 1 9 4 6 9 9 3 9 3 6 3 9 9 9 1 9 6 5 7 5 1 1 1 1 1 8 2 4 5 1 6 6 7 1 1 7 5 6 1 3 1 1 3 7 4 5 1 5 4 8 8 5 1 1 9 2 9 6 2 7 5 5 7 1 2 9 1 8 1 5 2 6 8 6 1 7 6 4 1 8 9 3 7 1 1 1 2 1 6 1 8 8 8 1 1 6 1 5 1 1 7 5 3 5 1 2 9 4 1 1 6 5 1 1 1 9 2 6 9 8 9 3 4 2";
        String s2 = "8 6 1 1 1 1 3 1 1 2 1 8 9 1 6 8 2 1 3 1 2 1 7 1 2 1 1 1 7 5 1 8 4 1 1 1 1 7 6 6 1 3 1 1 1 3 1 1 3 8 9 1 4 8 3 1 5 8 1 10 6 5 10 3 7 1 4 1 5 1 6 2 3 2 3 2 1 9 4 9 5 1 3 3 2 9 1 3 1 1 1 1 3 1 10 1 1 4 1 1 2 2 1 6 6 9 1 1 1 1 4 1 3 4 1 1 4 2 1 2 1 1 1 1 8 3 1 8 1 5 7 1 1 1 1 5 6 1 5 4 1 1 1 1 9 1 5 1 1 7 1 8 3 9 7 9 9 1 1 8 6 4 1 1 3 1 6 7 1 7 1 1 1 7 2 1 1 1 1 1 1 9 9 1 1 1 8 5 1 1 5 2 1 9 1 5 5 1 1 1 1 1 1 1 1 1 1 1 1 1 1 5 2 1 1 1 7 1 4 6 1 2 1 6 1 2 5 9 1 1 3 1 2 1 2 2 1 1 1 2 1 1 1 1 1 1 1 1 1 2 6 3 1 1 1 1 1 1 1 9 1 10 6 1 5 1 1 1 6 2 2 1 7 5 2 5 1 1 1 6 4 4 1 5 10 1 5 1 4 1 5 1 2 1 5 2 1 1 5 2 1 1 1 2 6 1 1 1 3 1 1 3 1 1 1 10 2 5 1 7 1 1 1 8 4 2 3 2 7 5 1 1 1";

        List<Integer> listOne = Stream.of(s1.split(" ")).map(Integer::parseInt).toList();
        List<Integer> listTwo = Stream.of(s2.split(" ")).map(Integer::parseInt).toList();
        int k = 11;

        String result = TwoArrays.twoArrays(k, listOne, listTwo);
        Assert.assertEquals("NO", result);
    }

    @Test
    public void Test2() {
        String s1 = "25 38 16 5 13 31 2 5 5 6 38 1 55 28 60 36 29 57 31 25 19 7 58 48 41 55 2 54 48 54 31 54 29 9 14 58 41 9 58 42 22 20 56 34 58 44 4 17 4 55 42 21 30 17 59 10 4 50 48 3 4 37 41 14 37 9 33 34 52 46 15 45 26 21 29 15 26 50 39 4 28 40 5 20 35 30 60 35 12 20 37 38 40 5 31 5 20 41 17 39 1 11 18 53 24 6 40 27 16 31 15 21 10 10 5 23 17 46 9 57 30 38 58 55 31 36 28 58 37 53 28 45 29 14 60 16 57 13 34 28 51 8 9 15 1 56 6 22 47 33 21 41 10 58 29 49 28 60 50 29 18 29 12 22 20 6 45 40 1 21 34 20 50 45 39 25 30 33 22 40 18 35 18 60 52 6 19 27 59 14 45 44 54 43 16 36 31 6 32 36 59 28 43 46 11 20 28 1 59 46 18 18 28 9 22 3 14 35 14 2 59 13 59 9 17 12 57 31 33 7 31 1 51 12 16 44 56 20 35 7 11 56 39 54 2 57 33 45 26 44 44 42 16 1 48 26 1 36 13 14 42 34 17 60 38 7 3 37 44 52 50 58 9 3 46 5 38 42 14 33 36 3 2 20 12 3 32 17 3 56 23 1 52 37 32 13 56 22 59 53 41 11 10 8 48 42 53 27 1 47 32 1 56 58 7 2 40 57 6 25 37 47 49 11 1 44 53 54 40 14 1 23 3 35 27 53 60 18 23 43 49 34 41 32 48 38 54 52 49 57 49 7 45 37 38 23 10 41 40 44 42 26 57 9 26 9 9 12 45 47 1 28 14 18 8 52 44 44 22 58 17 35 26 57 35 25 21 53 60 6 34 8 13 16 38 51 6 13 16 45 17 60 49 56 30 26 1 6 34 15 24 34 2 42 1 32 1 40 7 13 9 1 9 23 8 28 56 30 10 21 26 38 52 1 54 21 57 41 49 13 31 10 60 16 33 51 60 27 10 59 25 18 1 11 50 34 43 36 34 42 56 11 40 21 47 15 24 58 22 49 52 43 19 45 9 53 47 2 7 31 30 46 1 59 24";
        String s2 = "54 26 13 30 39 58 25 29 1 46 31 27 47 1 26 9 2 19 1 31 35 53 50 33 9 8 40 55 31 46 2 16 1 1 1 25 55 1 58 47 4 1 51 24 35 44 9 50 19 25 52 12 48 1 48 26 57 40 59 16 28 9 18 4 11 39 8 51 7 53 36 3 41 16 6 1 1 12 48 43 55 1 49 46 25 38 29 29 1 1 34 5 53 44 27 40 1 26 34 34 8 19 43 44 11 15 1 17 43 9 36 50 50 17 21 17 23 6 41 57 30 43 15 61 37 26 47 41 1 55 5 9 26 43 48 30 49 36 53 14 40 19 11 2 10 26 22 24 46 2 13 60 1 21 51 27 14 35 12 51 51 47 51 12 1 27 11 19 22 58 22 22 46 20 7 18 51 41 6 1 18 43 1 14 36 11 30 1 30 35 53 1 16 3 3 1 10 48 7 30 53 8 35 9 53 25 23 41 13 15 16 29 59 22 54 45 36 54 1 22 39 34 1 17 20 42 3 13 25 23 33 49 23 17 22 35 15 52 1 3 18 5 12 41 1 1 20 14 44 55 14 29 7 35 35 13 49 17 22 27 50 47 52 55 19 1 1 56 50 34 11 1 35 1 42 1 18 52 29 27 51 52 10 2 57 35 1 54 61 14 30 13 32 18 54 53 41 31 15 52 14 1 55 28 41 1 7 33 1 23 46 14 19 18 44 5 1 47 43 1 24 1 16 9 44 45 43 5 41 34 8 9 50 25 32 22 16 43 40 48 49 1 39 32 17 15 14 51 19 46 21 39 27 34 52 15 37 34 52 56 59 19 33 57 4 37 19 1 3 14 6 16 25 23 34 42 29 42 39 41 53 55 27 21 6 51 32 53 6 39 25 29 39 3 50 28 24 47 44 22 19 18 44 40 48 47 9 47 45 20 3 25 11 1 26 27 49 43 31 18 5 45 33 24 20 3 2 19 32 20 28 45 17 38 12 32 3 14 4 24 37 55 2 20 48 16 7 23 1 52 50 1 14 5 42 37 51 35 9 16 55 31 51 5 17 19 57 1 54 23 1 27 14 27 44 32 1 26 40 31 11 48 50 43 8";

        List<Integer> listOne = Stream.of(s1.split(" ")).map(Integer::parseInt).toList();
        List<Integer> listTwo = Stream.of(s2.split(" ")).map(Integer::parseInt).toList();
        int k = 62;

        String result = TwoArrays.twoArrays(k, listOne, listTwo);
        Assert.assertEquals("NO", result);
    }

    @Test
    public void Test3() {
        String s1 = "13 43 33 55 1 51 73 66 66 70 38 55 25 17 4 11 69 29 11 1 1 9 45 75 11 54 14 46 1 75 45 38 66 1 20 32 25 69 73 10 23 1 73 40 43 8 41 55 58 43 68 46 28 14 1 61 69 18 5 9 59 56 36 40 13 19 5 27 37 46 2 70 66 10 67 18 70 30 15 64 32 25 27 62 31 64 1 24 47 70 75 21 14 48 40 40 24 41 50 34 68 66 7 73 27 57 26 72 57 1 54 52 28 29 33 1 53 25 45 43 7 49 47 51 29 50 7 73 19 64 59 3 1 11 38 1 20 62 78 39 37 78 41 38 59 8 40 33 16 29 42 61 73 64 47 14 50 18 42 6 18 47 42 2 44 68 30 35 57 39 68 18 64 28 10 22 44 73 46 50 61 1 59 12 10 64 41 69 38 71 28 58 40 13 36 22 55 22 36 59 1 43 33 58 1 23 23 46 34 11 34 36 47 9 10 1 25 65 1 23 53 64 43 37 7 51 42 55 48 69 51 72 46 56 2 49 25 52 49 70 47 14 68 14 56 44 11 12 23 40 29 17 53 1 30 65 1 23 71 57 51 50 38 65 53 21 37 58 49 44 67 36 3 61 70 47 76 38 1 44 49 66 70 77 78 13 65 57 16 62 67 42 46 25 1 49 69 5 73 58 24 38 25 31 1 19 76 49 1 35 19 32 20 69 48 21 74 18 76 29 18 35 35 1 46 78 11 48 50 42 35 57 34 24 9 52 71 6 20 43 35 74 69 67 75 41 44 1 19 39 35 46 59 71 62 25 34 29 44 70 20 1 49 68 57 45 9 38 39 65 35 35 1 72 31 23 16 13 8 42 36 5 2 16 32 65 51 20 47 59 55 20 38 74 53 69 33 34 58 36 36 1 13 58 48 3 5 73 74 67 19 20 68 76 12 46 53 13 4 72 66 62 52 8 27 1 78 40 62 75 34 8";
        String s2 = "30 41 33 6 74 76 35 11 67 10 43 52 1 55 51 44 73 66 15 41 33 13 76 34 22 4 1 1 23 35 22 31 76 40 31 5 16 50 33 29 60 1 31 46 60 7 12 12 46 11 1 70 68 72 8 18 31 25 3 32 76 35 1 43 50 7 21 67 55 72 48 22 10 62 28 6 7 35 44 44 18 6 45 17 70 10 1 20 21 55 34 21 68 42 19 18 60 31 16 21 33 71 4 71 52 64 24 67 44 46 9 19 40 8 69 37 1 14 63 26 16 32 70 43 11 56 51 4 11 16 29 49 57 54 67 1 23 20 45 66 60 35 51 60 27 35 30 39 42 52 29 20 47 58 54 32 13 19 64 29 20 31 8 1 14 59 22 26 64 49 54 46 31 64 78 36 47 47 25 4 9 61 46 40 78 17 50 5 17 6 35 35 1 66 29 42 74 18 77 69 60 63 31 16 37 24 30 41 45 23 37 7 72 4 79 36 33 35 41 1 6 47 24 1 50 72 1 2 27 71 65 26 74 4 18 11 67 1 77 52 61 1 18 1 30 35 27 77 1 35 3 1 53 43 28 54 36 29 79 54 68 22 2 35 22 32 31 21 39 43 57 66 38 35 33 35 75 29 24 14 56 1 37 32 1 56 53 66 53 5 69 36 64 1 42 11 53 22 27 61 75 63 71 33 59 26 31 71 18 30 44 66 68 59 9 42 68 52 60 17 42 18 63 79 62 11 19 27 29 3 23 27 21 75 28 67 9 10 3 3 6 70 1 56 55 1 34 74 49 28 54 23 39 2 12 48 74 51 61 55 48 72 67 14 20 44 69 19 72 3 75 74 10 1 46 20 24 72 64 45 39 62 16 44 18 75 15 71 44 15 16 51 55 25 37 1 35 44 49 31 67 4 26 16 27 45 32 8 40 28 73 31 64 41 1 45 77 29 70 40 56 13 24 28 31 13 64 12 3 36 52 41";

        List<Integer> listOne = Stream.of(s1.split(" ")).map(Integer::parseInt).toList();
        List<Integer> listTwo = Stream.of(s2.split(" ")).map(Integer::parseInt).toList();
        int k = 80;

        String result = TwoArrays.twoArrays(k, listOne, listTwo);
        Assert.assertEquals("NO", result);
    }
}
